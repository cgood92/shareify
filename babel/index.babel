var { Router, Route, IndexRoute, Link, browserHistory } = ReactRouter;

// Init firebase
var myFirebaseRef = new Firebase("https://shareify-6aca2.firebaseio.com/");
var userId = "12345";


/*
 * *************************************** ResourceCard **************************************
 */
class ResourceCard extends React.Component {
    constructor(props) {
        super(props);
        this.state = {
            href: this.props.href,
            chat: {}
        };
    }
    render() {
        var { href } = this.state;
        return <li className="collection-item"><a href={href}><div>{href}<span className="secondary-content"><i className="material-icons">send</i></span></div></a></li>;
    }
}

/*
 * *************************************** ResourceCardEditable **************************************
 */
class ResourceCardEditable extends React.Component {
    constructor(props) {
        super(props);
        var { collectionId } = this.props;
        this.state = {
            collectionId: collectionId
        };
    }
    
    add(e) {
        var form = e.target,
            elements = form.elements,
            href = elements.namedItem("link").value,
            collectionId = this.state.collectionId;
        var toPush = {
            href: href,
            collection: {},
            user: userId
        };
        toPush.collection[collectionId] = collectionId;
        myFirebaseRef.child("resources").push(toPush).then((snapshot) => {
            form.reset();
        });
        e.preventDefault();
        return false;
    }
    
    render() {
        return <li className="collection-item">
            <form onSubmit={this.add.bind(this)}>
                <input placeholder="Link" id="collection_link" type="text" name="link"></input>
            </form>
        </li>;
    }
}

/*
 * *************************************** BoardView **************************************
 */
class BoardView extends React.Component {
    constructor(props) {
        super(props);
        var boardId = this.props.params.boardId;
        console.log("New...", boardId);
        this.state = {
            collections: [],
            id: boardId
        };
        myFirebaseRef.child("collections").orderByChild("board/" + boardId).equalTo(boardId).on("value", (snapshot) => {
            console.log("okie dokey");
            if (snapshot.exists()){
                console.log("setting state...");
                this.state = {
                    collections: Object.keys(snapshot.val()),
                    id: this.state.boardId
                };
                this.setState(this.state);
            }
        });
    }
    render() {
        var collections = this.state.collections.map((collection) => {
            return <CollectionCard boardId={this.state.id} id={collection}/>;
        });
        return <section className="collectionRow">
            {collections}
            <CollectionCardEditable boardId={this.state.id}/>
        </section>;
    }
}

/*
 * *************************************** CollectionCard **************************************
 */
class CollectionCard extends React.Component {
    constructor(props) {
        super(props);
        this.state = {
            title: "Title coming...",
            author: "Author coming...",
            description: "Description coming...",
            boardId: this.props.boardId,
            id: this.props.id
        };
        myFirebaseRef.child("collections").child(this.state.id).on("value", (snapshot) => {
            if (snapshot.exists()) {
                var collection = snapshot.val();
                this.state = {
                    title: collection.title,
                    author: collection.author,
                    description: collection.description,
                    id: this.state.id,
                    boardId: this.state.boardId
                };
                this.setState(this.state);
            }
        });
    }
    render() {
        var { id, boardId, title, author, description } = this.state;
        return (
            <div className="collectionCard card blue-grey darken-1">
                <div className="card-content white-text">
                    <Link to={"/" + boardId + "/" + id}><div className="collectionCard__title card-title grey-text">{title}</div></Link>
                    <div className="collectionCard__author blue-grey-text">Shared by {author}</div>
                    <p className="collectionCard__description">{description}</p>
                    <ChatCard/>
                </div>
            </div>
        );
    }
}

/*
 * *************************************** CollectionCardEditable **************************************
 */
class CollectionCardEditable extends React.Component {
    constructor(props) {
        super(props);
        this.state = {
            title: props.title,
            description: props.description
        };
    }
    
    add(e) {
        var form = e.target,
            elements = form.elements,
            title = elements.namedItem("title").value,
            description = elements.namedItem("description").value;
        var boardId = this.props.boardId;
        var toPush = {
            title: title,
            description: description,
            board: {}
        };
        toPush.board[boardId] = boardId;
        myFirebaseRef.child("collections").push(toPush).then((snapshot) => {
            this.setState({
                title: '',
                description: ''
            });
            form.reset();
        });
        e.preventDefault();
        return false;
    }
    
    render() {
        var { title, description, status } = this.state;
        return (
            <div className="collectionCard card blue-grey darken-1">
                <div className="card-content white-text">
                    <form onSubmit={this.add.bind(this)}>
                        <div className="row">
                            <div className="input-field col s6">
                                <input placeholder="Title" id="collection_title" type="text" name="title"/>
                                <label for="collection_title" className="active">Title</label>
                            </div>
                        </div>
                        <div className="row">
                            <div className="input-field col s6">
                                <input placeholder="Description" id="collection_desc" type="text" name="description"></input>
                                <label for="collection_desc" className="active">Description</label>
                            </div>
                        </div>
                        <button className="btn-floating btn-large waves-effect waves-light red"><i className="material-icons">add</i></button>
                    </form>
                </div>
            </div>
        );
    }
}

/*
 * *************************************** ChatCard **************************************
 */
class ChatCard extends React.Component {
    constructor(props) {
        super(props);
        this.state = {
            messages: [{
                user: 'Person 1',
                message: 'Proin eget tortor risus.'
            },{
                user: 'Person 2',
                message: 'Pellentesque in ipsum id orci porta dapibus.'
            },{
                user: 'Person 3',
                message: 'Proin eget tortor risus. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Quisque velit nisi, pretium ut lacinia in, elementum id enim. Curabitur non nulla sit amet nisl tempus convallis quis ac lectus. Quisque velit nisi, pretium ut lacinia in, elementum id enim.'
            }]
        };
    }
    
    toggleDisplay(e){
        $(e.target).parents(".chat").toggleClass("hidden");
    }
    
    render() {
        var messages = this.state.messages.map(function(message){
                        return <li className="collection-item chat__message"><label>{message.user}</label> {message.message}</li>;
                    });
        return (<ul className="chat collection with-header hidden">
            <li className="collection-header" onClick={this.toggleDisplay}>Chat</li>
            {messages}
            <li className="collection-item chat__message">
                <div className="input-field">
                    <i className="material-icons prefix">mode_edit</i>
                    <input id="icon_prefix2" type="text"></input>
                    <label for="icon_prefix2">Message</label>
                </div>
            </li>
        </ul>);
    }
}

/*
 * *************************************** HomeView **************************************
 */
class HomeView extends React.Component {
    constructor(props) {
        super(props);
        this.state = {
            boards: []
        };
        myFirebaseRef.child("boards").orderByChild("user").equalTo(userId).on("value", (snapshot) => {
            if (snapshot.exists()) {
                var boards = snapshot.val();
                this.state.boards = Object.keys(boards);
                this.setState(this.state);
            } else {
                this.state.boards = [];
                this.setState(this.state);
            }
        });
    }
    render() {
        var boards = this.state.boards.map(function(boardId){
            return <BoardCard id={boardId}/>;
        });
        return <section className="home">
            {boards}
            <BoardCardEditable/>
        </section>;
    }
}

/*
 * *************************************** BoardCard **************************************
 */
class BoardCard extends React.Component {
    constructor(props) {
        super(props);
        this.state = {
            title: "Title coming...",
            author: "Author coming...",
            description: "Description coming...",
            id: this.props.id
        };
        var id = this.state.id;
        myFirebaseRef.child("boards/" + id).on("value", (snapshot) => {
            if (snapshot.exists()) {
                var board = snapshot.val();
                this.state = {
                    title: board.title,
                    author: board.author,
                    description: board.description,
                    id: this.state.id
                };
                this.setState(this.state);
            }
        });
    }
    remove(e) {
        // Remove board from DB
        myFirebaseRef.child("boards/" + this.state.id).remove(function(){
        });
    }
    render() {
        var { id, title, author, description } = this.state;
        return (
            <div className="boardCard card blue-grey darken-1">
                <div className="card-content white-text">
                    <span className="right card__editCont activator"><i className="material-icons">more_vert</i></span>
                    <Link to={"/" + id}><div className="boardCard__title card-title grey-text">{title}</div></Link>
                    <div className="boardCard__author blue-grey-text">Shared by {author}</div>
                    <p className="boardCard__description">{description}</p>
                    <ChatCard/>
                </div>
                <div className="card-reveal">
                    <span className="card-title grey-text text-darken-4">{title}<i className="material-icons right">close</i></span>
                    <ul className="editOptions">
                        <li onClick={this.remove.bind(this)}>Delete<i className="material-icons left">close</i></li>
                    </ul>
                </div>
            </div>
        );
    }
}

/*
 * *************************************** BoardCardEditable **************************************
 */
class BoardCardEditable extends React.Component {
    constructor(props) {
        super(props);
        this.state = {
            title: props.title,
            description: props.description
        };
    }
    
    add(e) {
        var form = e.target,
            elements = form.elements,
            title = elements.namedItem("title").value,
            description = elements.namedItem("description").value;
        myFirebaseRef.child("boards").push({
            title: title,
            description: description,
            user: userId
        }).then((snapshot) => {
            this.setState({
                title: '',
                description: ''
            });
            form.reset();
        });
        e.preventDefault();
        return false;
    }
    
    render() {
        var { title, description, status } = this.state;
        return (
            <div className="boardCard card blue-grey darken-1">
                <div className="card-content white-text">
                    <form onSubmit={this.add.bind(this)}>
                        <div className="row">
                            <div className="input-field col s6">
                                <input placeholder="Title" id="board_title" type="text" name="title"/>
                                <label for="board_title" className="active">Title</label>
                            </div>
                        </div>
                        <div className="row">
                            <div className="input-field col s6">
                                <input placeholder="Description" id="board_desc" type="text" name="description"></input>
                                <label for="board_desc" className="active">Description</label>
                            </div>
                        </div>
                        <button className="btn-floating btn-large waves-effect waves-light red"><i className="material-icons">add</i></button>
                    </form>
                </div>
            </div>
        );
    }
}

var MainLayout = React.createClass({
  render: function() {
    var { boardId, collectionId } = this.props.params;
    var breadcrumbs = <ul id="nav-mobile" className="right hide-on-med-and-down">
            <li><Link to="/">Home</Link></li>
            {boardId ? <li><Link to={"/" + boardId}>{boardId}</Link></li> : null}
            {collectionId ? <li><Link to={"/" + boardId + '/' + collectionId}>{collectionId}</Link></li> : null}
        </ul>;
    return (
      <div className="app">
        <nav>
            <div className="nav-wrapper blue-grey darken-4">
                <Link to="/" className="brand-logo">Shareify</Link>
                {breadcrumbs}
            </div>
        </nav>
        <main>
          {this.props.children}
        </main>
      </div>
      )
  }
})


$(document).ready(function() {
    // Initialize router
    ReactDOM.render(<Router>
                <Route path="/" component={MainLayout}>
                    <IndexRoute component={HomeView} />
                    <Route path=":boardId/:collectionId" component={CollectionView}/>
                    <Route path=":boardId" component={BoardView}/>
                </Route>
            </Router>, document.getElementById('app'), function() {
    });
});